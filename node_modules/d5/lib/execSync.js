var fs = require('fs'),
    path = require('path'),
    exec = require('child_process').exec,
    crypto = require('crypto');

function generatePrefix() {
    try {
        return crypto.randomBytes(48).toString('hex');
    } catch(e) {
        return null;
    }
}

// WARNING:
// really really bad implementation
exports = module.exports = function(command, options) {
    if(!command) { return null; }

    var prefix = generatePrefix();
    var outputFile = path.join('.', prefix + '.out');
    var errorFile = path.join('.', prefix + '.err');
    var exitCodeFile = path.join('.', prefix + '.ec');
    var doneFile = path.join('.', prefix + '.done');
    command = command + ' > ' + outputFile + ' 2> ' + errorFile + '; echo $? > ' + exitCodeFile + '; echo done > ' + doneFile;

    var child = exec(command, options);

    while(!fs.existsSync(doneFile)) {}

    var stdout = fs.readFileSync(outputFile);
    var stderr = fs.readFileSync(errorFile);
    var exitCode = fs.readFileSync(exitCodeFile).toString().trim();

    fs.unlinkSync(outputFile);
    fs.unlinkSync(errorFile);
    fs.unlinkSync(exitCodeFile);
    fs.unlinkSync(doneFile);

    return { 
        stdout: stdout, 
        stderr: stderr,
        exitCode: exitCode,

        outputToConsole: function() {
            if(stderr.length) { 
                var s = stderr.toString();
                console.error(s.substr(0, s.length-1)); 
            }
            if(stdout.length) {
                var s = stdout.toString();
                console.error(s.substr(0, s.length-1)); 
            }
        }
    };
};